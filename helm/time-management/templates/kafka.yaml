---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: zookeeper
  namespace: {{ .Values.namespace }}
  labels:
    app: zookeeper
spec:
  serviceName: zookeeper
  replicas: 1
  selector:
    matchLabels:
      app: zookeeper
  template:
    metadata:
      labels:
        app: zookeeper
    spec:
      containers:
        - name: zookeeper-container
          image: wurstmeister/zookeeper
          resources:
            requests:
              cpu: 100m
              memory: 50Mi
            limits:
              cpu: 250m
              memory: 200Mi
          livenessProbe:
            exec:
              command:
                - sh
                - -c
                - "echo ruok | nc localhost 2181 | grep imok"
            initialDelaySeconds: 10
            periodSeconds: 30
          ports:
            - containerPort: 2181
              name: zookeeper-port
          volumeMounts:
            - mountPath: /data
              name: zookeeper-db-storage
  volumeClaimTemplates:
    - metadata:
        name: zookeeper-db-storage
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
        storageClassName: {{ .Values.storageClassName }}
---
apiVersion: v1
kind: Service
metadata:
  name: zookeeper-service
  namespace: {{ .Values.namespace }}
spec:
  selector:
    app: zookeeper
  ports:
    - name: zookeeper-port
      protocol: TCP
      port: 2181
      targetPort: 2181
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: kafka
  namespace: {{ .Values.namespace }}
  labels:
    app: kafka
spec:
  serviceName: kafka
  replicas: 1
  selector:
    matchLabels:
      app: kafka
  template:
    metadata:
      labels:
        app: kafka
    spec:
      initContainers:
        - name: wait-for-zookeeper
          image: busybox
          command:
            [
              "sh",
              "-c",
              "until nc -z zookeeper-service.{{ .Values.namespace }}.svc.cluster.local 2181; do echo waiting for zookeeper; sleep 2; done;",
            ]
      containers:
        - name: kafka-container
          image: wurstmeister/kafka
          resources:
            requests:
              cpu: 100m
              memory: 512Mi
            limits:
              cpu: 500m
              memory: 1Gi
          livenessProbe:
            exec:
              command:
                - sh
                - -c
                - "nc -z localhost 9092"
            initialDelaySeconds: 10
            periodSeconds: 30
          env:
            - name: KAFKA_ADVERTISED_LISTENERS
              value: "INSIDE://kafka-service:9092,OUTSIDE://kafka-service:9093"
            - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
              value: "INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT"
            - name: KAFKA_LISTENERS
              value: "INSIDE://0.0.0.0:9092,OUTSIDE://0.0.0.0:9093"
            - name: KAFKA_INTER_BROKER_LISTENER_NAME
              value: "INSIDE"
            - name: KAFKA_ZOOKEEPER_CONNECT
              value: "zookeeper-service:2181"
            - name: KAFKA_CREATE_TOPICS
              value: "newUser:1:1"
          ports:
            - containerPort: 9092
              name: kafka-port
          volumeMounts:
            - mountPath: /kafka
              name: kafka-db-storage
  volumeClaimTemplates:
    - metadata:
        name: kafka-db-storage
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
        storageClassName: {{ .Values.storageClassName }}
---
apiVersion: v1
kind: Service
metadata:
  name: kafka-service
  namespace: {{ .Values.namespace }}
spec:
  selector:
    app: kafka
  ports:
    - name: kafka-port
      protocol: TCP
      port: 9092
      targetPort: 9092
